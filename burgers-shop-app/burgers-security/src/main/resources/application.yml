spring:
  application:
    name: burgers-security
  security:
    user:
      name: user
      password: password
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/oauth2/jwks
      authorizationserver:
        client:
          # oidc-client:
          #   registration:
          #     client-id: "taco-admin-client"
          #     client-secret: "{noop}secret"
          #     client-authentication-methods:
          #       - "client_secret_basic"
          #     authorization-grant-types:
          #       - "authorization_code"
          #       - "refresh_token"
          #     redirect-uris:
          #       - "http://localhost:8080/login/oauth2/code/taco-admin-client"
          #     post-logout-redirect-uris:
          #       - "http://127.0.0.1:8080/"
          #     scopes:
          #       - "writeIngredients"
          #       - "deleteIngredients"
          #       - "openid"
          #       - "profile"
          #   require-authorization-consent: true
          oidc-client:
            registration:
              client-id: "Ov23liFpUOo2O8lyTbjZ"
              client-secret: "{noop}23d506b91b6283c2eac0f6d56001b2842cbaac29"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://localhost:8080/login/oauth2/code/Ov23liFpUOo2O8lyTbjZ"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/"
              scopes:
                - "writeIngredients"
                - "deleteIngredients"
                - "openid"
                - "profile"
                # - user:email
                # - read:user
            require-authorization-consent: true
      # client:
      #   registration:
      # taco-admin-client:
      #   provider: tacocloud
      #   client-id: taco-admin-client
      #   client-secret: secret
      #   authorization-grant-type: authorization_code
      #   redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
      #   scope: writeIngredients,deleteIngredients,openid
      # github:
      #   clientId: Ov23liFpUOo2O8lyTbjZ
      #   clientSecret: 23d506b91b6283c2eac0f6d56001b2842cbaac29
      # # client-authentication-methods:
      # #   - "client_secret_basic"
      # authorization-grant-type: "authorization_code"
      # #   - "refresh_token"
      # redirect-uri: "http://localhost:8080/login/oauth2/code/github"
      # # post-logout-redirect-uris:
      # #   - "http://127.0.0.1:8080/"
      # scopes:
      #   # - "writeIngredients"
      #   # - "deleteIngredients"
      #   # - "openid"
      #   # - "profile"
      #   - user:email
      #   - read:user
      # require-authorization-consent: true
      # provider:
      # tacocloud:
      #   issuer-uri: http://localhost:8080
      #   authorization-uri: http://localhost:8080/oauth2/authorize
      #   token-uri: http://localhost:8080/oauth2/token
      #   jwk-set-uri: http://localhost:8080/oauth2/jwks
      #   user-info-uri: http://localhost:8080/userinfo
      #   user-name-attribute: sub
      # github-id:
      #   issuer-uri: http://localhost:8080
      #   authorization-uri: http://localhost:8080/oauth2/authorize
      #   token-uri: https://github.com/login/oauth/access_token
      #   jwk-set-uri: http://localhost:8080/oauth2/jwks
      #   user-info-uri: http://localhost:8080/userinfo
      #   user-name-attribute: sub

rsa:
  private-key: classpath:certs/private-key.pem
  public-key: classpath:certs/public-key.pem
